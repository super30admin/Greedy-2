class Solution {
public:
    vector<int> partitionLabels(string s) {
        unordered_map<char,int> map;
        int n = s.size();
        vector<int> ans;        
        for(int i = 0;i <n ; i++){
            map[s[i]] = i+1;
        }
        int start = 0;
        int end = 0;
        for(int i =0; i< n ;i++){
            end = max(end, map[s[i]]); // end keeps updating if element between end and start is farther than the given end so...
            if(end-1 == i){
                ans.push_back(end-start);
                start = end;
            }
        }
        return ans;
    }
};
